{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","handleBg","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","toUpperCase","toLowerCase","document","getElementById","navigator","clipboard","writeText","showAlert","newText","split","join","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","mess","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.a139e8e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n         <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/TextForm\">TextForm</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/TextForm\">TextForm</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n                </li>\r\n            </ul>\r\n           <div>\r\n                \r\n           </div>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark': 'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.handleBg} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/> \r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n        title:PropTypes.string.isRequired,\r\n        about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:'set title here',\r\n    about:'set about here'\r\n}","import React from 'react'\r\nimport { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleCopy= ()=>{\r\n      let text = document.getElementById('myBox');\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"The text is copied successfully!\",\"success\")\r\n    }\r\n    const removeExtraSpaces= ()=>{\r\n      let newText = text.split(/[ ] + /);\r\n      setText(newText.join(\" \"));\r\n    }\r\n    const handleOnChange = (event)=> {\r\n      setText(event.target.value);\r\n    };\r\n\r\n  \r\n\r\n    const [text , setText] = useState('Enter the text here');\r\n\r\nreturn (\r\n      <>\r\n        <div>\r\n            <div className=\"mb-3\">\r\n                <h1 className=' mt-3 mb-3'>{props.heading}</h1>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={()=>setText(text.toUpperCase())}> Convert to UpperCase </button>\r\n            <button className='btn btn-success mx-3' onClick={()=>{\r\n              setText(text.toLowerCase());\r\n              }}> Convert to LowerCase </button>\r\n\r\n            <button className='btn btn-warning ' onClick={handleCopy}>copy text</button>\r\n            <button className='btn btn-secondary mx-3' onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className='btn btn-danger ' onClick={()=>setText('')}> Clear Text </button>\r\n        </div>\r\n\r\n        <div className=\"container mt-3\">\r\n            <h2>Your text summary</h2>\r\n            <h5>{text.split(\" \").length} Word and {text.length} characters</h5>\r\n            <h6>{0.008 * text.split(\" \").length} minutes read</h6>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n     let lower = word.toLowerCase();\r\n     return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n\r\n  return (\r\n    props.alert &&   <div>\r\n         <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.mess)}</strong> \r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React from 'react';\nimport  { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import Home from './components/Home';\n\n// import {\n//   BrowserRouter as Main,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const handleBg = ()=> {\n    if (mode === 'dark'){\n        setMode('light');\n        document.body.style.backgroundColor ='white';     \n        document.body.style.color ='black';     \n        showAlert(\"light mode is enable\",\"danger\");\n    }\n    else {\n      setMode('dark');\n      document.body.style.backgroundColor ='#02101b';     \n      document.body.style.color ='white';    \n      showAlert(\"Dark Mode is Enable\",\"primary\"); \n    }\n  }\n\n  const showAlert=(message, type)=>{\n      setAlert({\n        mess:message,\n        type:type\n      });\n\n      setTimeout(() => {\n        setAlert(null);\n      }, 1200);\n  }\n\n  return (\n    <>\n      {/* <Main> */}\n        <Navbar title=\"SdBlog\" handleBg={handleBg} mode={mode} about=\"AboutUs\"/>\n        <Alert alert={alert} />\n              <div className=\"container\">\n        {/* <Routes>\n                <Route exact path='/' element={<Home/>} /> \n                <Route exact path='/About' element={<About/>} /> \n                <Route exact path='/TextForm' element={<TextForm/>} />  */}\n                   \n                  \n                  <TextForm heading=\"Enter any text to search\" showAlert={showAlert} />\n                  {/* <About/> */}\n        {/* </Routes> */}\n              </div>\n      {/* </Main> */}\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}